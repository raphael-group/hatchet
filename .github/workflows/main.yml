name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  run_tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Upgrade setuptools
        run: |
          pip3 install wheel --upgrade
          pip3 install setuptools --upgrade

      - name: Cache Testing Data
        id: cache-test-data
        uses: actions/cache@v2
        with:
          path: testdata
          key: testdata

      - name: Download Testing Data
        if: steps.cache-test-data.outputs.cache-hit != 'true'
        run: |
          pip3 install zenodo-get
          python3 -m zenodo_get 10.5281/zenodo.4046906 --output-dir=testdata

      - name: Install coinor-cbc
        run: |
          sudo apt install coinor-cbc

      - name: Install Gurobi
        run: |
          wget https://packages.gurobi.com/9.0/gurobi9.0.2_linux64.tar.gz -O gurobi9.0.2_linux64.tar.gz
          tar xvzf gurobi9.0.2_linux64.tar.gz
          (cd gurobi902/linux64/src/build && make)
          (cd gurobi902/linux64/lib && ln -f -s ../src/build/libgurobi_c++.a libgurobi_c++.a)
          echo "GUROBI_HOME=$(realpath gurobi902)" >> $GITHUB_ENV

      - name: Activate Gurobi License
        run: |
          (cd gurobi902/linux64/bin && ./grbgetkey -q ${{ secrets.GUROBI_KEYCODE }} --path ${GUROBI_HOME})
          echo "GRB_LICENSE_FILE=${GUROBI_HOME}/gurobi.lic" >> $GITHUB_ENV
        continue-on-error: true

      - name: Install SAMtools
        run: |
          wget https://sourceforge.net/projects/samtools/files/samtools/1.7/samtools-1.7.tar.bz2/download -O samtools-1.7.tar.bz2
          tar xvjf samtools-1.7.tar.bz2
          (cd samtools-1.7 && ./configure && make)
          echo "HATCHET_PATHS_SAMTOOLS=$(realpath samtools-1.7)" >> $GITHUB_ENV

      - name: Install BCFTools
        run: |
          wget https://sourceforge.net/projects/samtools/files/samtools/1.7/bcftools-1.7.tar.bz2/download -O bcftools-1.7.tar.bz2
          tar xvjf bcftools-1.7.tar.bz2
          (cd bcftools-1.7 && ./configure && make)
          echo "HATCHET_PATHS_BCFTOOLS=$(realpath bcftools-1.7)" >> $GITHUB_ENV

      - name: Download and index hg19.fa
        run: |
          wget https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz
          gunzip hg19.fa.gz
          $HATCHET_PATHS_SAMTOOLS/samtools faidx hg19.fa
          $HATCHET_PATHS_SAMTOOLS/samtools dict hg19.fa > hg19.dict
          echo "HATCHET_PATHS_REFERENCE=$(realpath hg19.fa)" >> $GITHUB_ENV

      - name: Set Envvars
        run: |
          echo "HATCHET_TESTS_BAM_DIRECTORY=$(realpath testdata)" >> $GITHUB_ENV
          echo "HATCHET_COMPUTE_CN_SOLVER=cbc" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Tox and any other packages
        run: |
          python -m pip install coverage tox tox-gh-actions

      - name: Test with tox
        run: |
          tox
        env:
          PLATFORM: ${{ matrix.python }}
          CXXFLAGS: -pthread

      # We may end up with files that have a ':' in their filenames,
      # due to the <chr>:start:end notation of chromosomes we process through SAMtools/BCFtools.
      # upload-artifact is unable to handle these, so we replace colons with dashes
      - name: Clean up artifact filenames
        run: |
          sudo apt install rename
          find tests/out -name "*:*" -exec rename 's|:|-|g' {} \;
 
      - name: Save Pytest Output Data
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: tests/out

      - name: Convert coverage
        run: |
          python -m coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false

  build_docs:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.8]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true 

      - name: Upgrade setuptools
        run: |
          pip3 install wheel --upgrade
          pip3 install setuptools --upgrade

      - name: Install Gurobi
        run: |
          wget https://packages.gurobi.com/9.0/gurobi9.0.2_linux64.tar.gz -O gurobi9.0.2_linux64.tar.gz
          tar xvzf gurobi9.0.2_linux64.tar.gz
          (cd gurobi902/linux64/src/build && make)
          (cd gurobi902/linux64/lib && ln -f -s ../src/build/libgurobi_c++.a libgurobi_c++.a)
          echo "GUROBI_HOME=$(realpath gurobi902)" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install package
        run: |
          CXXFLAGS=-pthread pip install .[dev]

      - name: Build docs
        run: |
          cd docs && sphinx-apidoc -f -o ./source/src ../src/hatchet -H Modules && make html && touch build/html/.nojekyll

      - name: Update gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: "docs/buildDocs.sh"
        shell: bash
